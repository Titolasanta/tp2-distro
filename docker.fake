version: '3'
services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 10s
        timeout: 5s
        retries: 10


  producer0:
      build:
        context: ./producer
        dockerfile: producer.dockerfile
      restart: on-failure
      depends_on:
        - rabbitmq
      links: 
        - rabbitmq
      environment:
        - ID=0
        - PYTHONUNBUFFERED=1
        - N_BASIC_CONSUMERS=1
        - N_STAR_CONSUMERS=1
        - N_DAY_CONSUMERS=1
        - N_TEXT_CONSUMERS=1
        - N_BUSINESS_CONSUMERS=1

  producer1:
      build:
        context: ./producer
        dockerfile: producer.dockerfile
      restart: on-failure
      depends_on:
        - rabbitmq
      links: 
        - rabbitmq
      environment:
        - ID=1
        - PYTHONUNBUFFERED=1
        - N_BASIC_CONSUMERS=1
        - N_STAR_CONSUMERS=1
        - N_DAY_CONSUMERS=1
        - N_TEXT_CONSUMERS=1
        - N_BUSINESS_CONSUMERS=1

  delivery:
    build:
      context: ./delivery
      dockerfile: delivery.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - N_PRODUCERS=2
      - PYTHONUNBUFFERED=1


  client:
    build:
      context: ./client
      dockerfile: client.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    volumes:
      - myvolume:/data
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1


  business_producer:
    build:
      context: ./business_producer
      dockerfile: business_producer.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1)

  consumer:
    build:
      context: ./consumer
      dockerfile: consumer.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - N_PRODUCERS=2
      - PYTHONUNBUFFERED=1
      - ID=

  star_consumer:
    build:
      context: ./star_consumer
      dockerfile: star_consumer.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - N_PRODUCERS=2
      - PYTHONUNBUFFERED=1
      - ID=

  text_consumer:
    build:
      context: ./text_consumer
      dockerfile: text_consumer.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - N_PRODUCERS=2
      - PYTHONUNBUFFERED=1
      - ID=

  business_consumer:
    build:
      context: ./business_consumer
      dockerfile: business_consumer.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - N_PRODUCERS=2
      - PYTHONUNBUFFERED=1
      - ID=

  day_consumer:
    build:
      context: ./day_consumer
      dockerfile: day_consumer.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - N_PRODUCERS=2
      - PYTHONUNBUFFERED=1
      - ID=

  sink:
    build:
      context: ./sink
      dockerfile: sink.dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - N_BASIC_CONSUMERS=1
      - N_STAR_CONSUMERS=1
      - N_DAY_CONSUMERS=1
      - N_TEXT_CONSUMERS=1
      - N_BUSINESS_CONSUMERS=1

volumes:
  myvolume:
    external: true